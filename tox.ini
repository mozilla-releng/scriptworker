[tox]
envlist = lint,py36,py37,py37-cot

[testenv]
depends = clean
recreate = True
setenv =
    PYTHONDONTWRITEBYTECODE=1

passenv =
    HOME
    NO_TESTS_OVER_WIRE
    NO_CREDENTIALS_TESTS
    TRAVIS
    TRAVIS_JOB_ID
    TRAVIS_BRANCH

deps =
    aiohttp>=3
    asyncio_extras
    # TODO Remove the condition on coverage once
    # https://github.com/z4r/python-coveralls/issues/73 is fixed
    coverage<5
    flake8
    pydocstyle==3.0.0
    flake8_docstrings
    mock
    pytest
    pytest-asyncio
    pytest-cov
    pytest-mock
    pytest-random-order
    virtualenv

usedevelop = true

commands=
    {posargs:py.test --cov-config=tox.ini --cov-append --cov=scriptworker --cov-report term-missing tests}

[testenv:clean]
skip_install = true
commands = coverage erase
depends =

[testenv:report]
skip_install = true
commands = coverage report -m
depends = py37
parallel_show_output = true

[testenv:coveralls]
passenv =
    COVERALLS_REPO_TOKEN
    TRAVIS_JOB_ID
    COVERALLS_SERVICE_NAME
deps=
    python-coveralls
    # TODO Remove the condition on coverage once
    # https://github.com/z4r/python-coveralls/issues/73 is fixed
    coverage<5
commands=
    coveralls

[testenv:py37-cot]
commands=
    python setup.py develop
    py.test -k test_verify_production_cot --random-order-bucket=none

[testenv:lint]
skip_install = true
deps =
    black
    isort
    flake8
    check-manifest
commands =
    black --check {toxinidir}
    isort --check -rc -df {toxinidir}
    flake8 {toxinidir}
    check-manifest -v {toxinidir}

[flake8]
max-line-length = 160
# test_github.py ignored because of https://gitlab.com/pycqa/flake8/issues/375
exclude = .ropeproject,.tox,sandbox,docs,.eggs,*.egg,*.egg-info,setup.py,build/,tests/test_github.py
show-source = True

[pytest]
norecursedirs = .tox .git .hg sandbox .eggs build
python_files = test_*.py
addopts = -vv --color=yes --random-order --durations=10
filterwarnings =
    ignore
    error:::scriptworker
    default::DeprecationWarning:scriptworker
    default::PendingDeprecationWarning:scriptworker

[coverage:run]
branch = true
